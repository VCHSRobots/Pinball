#! /usr/bin/python
# echo_test.py -- Tests the comm bus 
#
# Pinball Machine Project, EPIC Robotz, Fall 2022
# Epic Robotz, Fall 2020
# dlb
#
#
import comm_bus
import pb_log
import time
import sys
import random

pb_log.log_init()
pb_log.disable_debug()
pb_log.disable_terminal()

bus = comm_bus.CommBus() 
bus.begin()

def do_echo(addr, val):
    cmd = [100, val] 
    ans = bus.node_io(addr, cmd) 
    if ans is None: return -1 
    if len(ans) < 3: return -1
    return ans[2] 

nodes = [(2, "Light Node in Score Box"),
         (3, "Light Node in Play Field"),
         (4, "Flipper Node"), 
         (5, "Jet Bumpers Node"),
         (6, "Kicker Node"),
         (7, "Lane Sensor Node"),
         (8, "Target Node"),
         (9, "Test Node")]

active_nodes = []
echo_data = {}

for addr, desc in nodes:
    cmd = [100, 20]  # echo command
    ans = bus.node_io(addr, cmd)
    found = False  
    if ans is None:
        # Failed.  Try again in 0.5 secs
        time.sleep(0.5)
        ans = bus.node_io(addr, cmd) 
    if ans is not None: 
        active_nodes.append(addr)
        echo_data[addr] = eval = random.randint(0, 255) 
        do_echo(addr, eval)

if len(active_nodes) <= 0:
    print("No active nodes found. Cannot continue.")
    sys.exit() 

nodelist = ""
for a in active_nodes:
   nodelist += "%d  " % a
print("Active nodes found: %s" % nodelist)

try:
    ncount = nbusfail = nbadmatch = 0
    while(True):
        ival = random.randint(0, 255) 
        inode = random.randint(0, len(active_nodes) - 1)
        addr = active_nodes[inode] 
        oldval = do_echo(addr, ival) 
        if oldval < 0: nbusfail += 1
        if echo_data[addr] != oldval: nbadmatch += 1 
        echo_data[addr] = ival
        ncount += 1 
        if ncount % 100 == 0: 
            print(f"{ncount:6} cycles, {nbusfail:6} bus fails,  {nbadmatch:6} bad matches.") 
except KeyboardInterrupt:
    pb_log.close()
    bus.close() 